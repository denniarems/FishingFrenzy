{
  "contractName": "FrenzyFish",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fish",
          "type": "address"
        },
        {
          "name": "_orderPosition",
          "type": "uint256"
        }
      ],
      "name": "BuyFish",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetRodDetails",
      "outputs": [
        {
          "name": "_level",
          "type": "uint256"
        },
        {
          "name": "_power",
          "type": "uint256"
        },
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ListMarketOrders",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "uint256[]"
        },
        {
          "name": "",
          "type": "bool[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "UpgradeFishRod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fish",
          "type": "address"
        },
        {
          "name": "_orderPosition",
          "type": "uint256"
        }
      ],
      "name": "CancelSellFishOrder",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "UsersRod",
      "outputs": [
        {
          "name": "Level",
          "type": "uint256"
        },
        {
          "name": "Power",
          "type": "uint256"
        },
        {
          "name": "CurrentPrice",
          "type": "uint256"
        },
        {
          "name": "NextPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "FirstUserInitialRod",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fish",
          "type": "address"
        },
        {
          "name": "position",
          "type": "uint256"
        }
      ],
      "name": "SellFish",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SellOrders",
      "outputs": [
        {
          "name": "SellFish",
          "type": "address"
        },
        {
          "name": "Seller",
          "type": "address"
        },
        {
          "name": "OwnerFishPosition",
          "type": "uint256"
        },
        {
          "name": "IsFilled",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Fishes",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "Fishing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ListAllFishes",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "fish",
          "type": "address"
        }
      ],
      "name": "GetFishDetails",
      "outputs": [
        {
          "name": "_rarity",
          "type": "uint256"
        },
        {
          "name": "_weight",
          "type": "uint256"
        },
        {
          "name": "_price",
          "type": "uint256"
        },
        {
          "name": "_onOrder",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_fish\",\"type\":\"address\"},{\"name\":\"_orderPosition\",\"type\":\"uint256\"}],\"name\":\"BuyFish\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetRodDetails\",\"outputs\":[{\"name\":\"_level\",\"type\":\"uint256\"},{\"name\":\"_power\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ListMarketOrders\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ListAllFishes\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Fishing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"UpgradeFishRod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fish\",\"type\":\"address\"},{\"name\":\"_orderPosition\",\"type\":\"uint256\"}],\"name\":\"CancelSellFishOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"fish\",\"type\":\"address\"}],\"name\":\"GetFishDetails\",\"outputs\":[{\"name\":\"_rarity\",\"type\":\"uint256\"},{\"name\":\"_weight\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_onOrder\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"UsersRod\",\"outputs\":[{\"name\":\"Level\",\"type\":\"uint256\"},{\"name\":\"Power\",\"type\":\"uint256\"},{\"name\":\"CurrentPrice\",\"type\":\"uint256\"},{\"name\":\"NextPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"FirstUserInitialRod\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fish\",\"type\":\"address\"},{\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"SellFish\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SellOrders\",\"outputs\":[{\"name\":\"SellFish\",\"type\":\"address\"},{\"name\":\"Seller\",\"type\":\"address\"},{\"name\":\"OwnerFishPosition\",\"type\":\"uint256\"},{\"name\":\"IsFilled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Fishes\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/denny/Projects/FishingFrenzy/truffle/contracts/FrenzyFish.sol\":\"FrenzyFish\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/denny/Projects/FishingFrenzy/truffle/contracts/Fish.sol\":{\"keccak256\":\"0x93d7a1e73ba085a78f08112bf6a89de9f3a806f91c34965bd4fcb1d3b09817d9\",\"urls\":[\"bzzr://3c1c6febd530fc4963b5c378e395ae51c6422df14c9eab6e1028d0d41bd8ec1a\"]},\"/home/denny/Projects/FishingFrenzy/truffle/contracts/FishRod.sol\":{\"keccak256\":\"0xc786c68a9c7c52842ac8b7e98f87ecd59b7137f28339ef2c97ae933dbe9d02c5\",\"urls\":[\"bzzr://8db570df1d9cfd155455700bedd1f313061aeacf88ee8ffb36b3cec404cce3b3\"]},\"/home/denny/Projects/FishingFrenzy/truffle/contracts/FrenzyFish.sol\":{\"keccak256\":\"0xb42adbada56ebdfe0f044f02638ac650fde1edbfc4aa32891a80c4bba27ee38b\",\"urls\":[\"bzzr://147c1040d8e2943ae467ace443678dbd3e11e64945d18368e99112af474b0df8\"]},\"/home/denny/Projects/FishingFrenzy/truffle/contracts/Market.sol\":{\"keccak256\":\"0x05c9fa2710e85abe9a6396bc78a54de7429e8621d12d75dfcb2451cf80b1707f\",\"urls\":[\"bzzr://29694048be812dec44852ed0cb10e0daa3b81a31b16d398a9be60ffb078388c0\"]},\"/home/denny/Projects/FishingFrenzy/truffle/contracts/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612e09806100206000396000f3fe608060405260043610620000d3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ac1449014620000d85780630b5d5b54146200014f578063267dbaa3146200018b57806328347b6c14620002da5780636765bc16146200034b57806392a8a78914620003655780639aa0d925146200037f5780639e96c3ad14620003f6578063a089dcde1462000478578063a5e12aef14620004f6578063a6149f091462000528578063cb5eeae7146200059f578063ce4f8d411462000663575b600080fd5b348015620000e557600080fd5b506200013560048036036040811015620000fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000702565b604051808215151515815260200191505060405180910390f35b3480156200015c57600080fd5b506200016762000d28565b60405180848152602001838152602001828152602001935050505060405180910390f35b3480156200019857600080fd5b50620001a362000dfe565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b83811015620001f4578082015181840152602081019050620001d7565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015620002385780820151818401526020810190506200021b565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156200027c5780820151818401526020810190506200025f565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015620002c0578082015181840152602081019050620002a3565b505050509050019850505050505050505060405180910390f35b348015620002e757600080fd5b50620002f2620010c7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620003375780820151818401526020810190506200031a565b505050509050019250505060405180910390f35b3480156200035857600080fd5b506200036362001194565b005b3480156200037257600080fd5b506200037d620012e6565b005b3480156200038c57600080fd5b50620003dc60048036036040811015620003a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620015d8565b604051808215151515815260200191505060405180910390f35b3480156200040357600080fd5b5062000449600480360360208110156200041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001a48565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b3480156200048557600080fd5b50620004cb600480360360208110156200049e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001b1b565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156200050357600080fd5b506200050e62001b4b565b604051808215151515815260200191505060405180910390f35b3480156200053557600080fd5b5062000585600480360360408110156200054e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001cc6565b604051808215151515815260200191505060405180910390f35b348015620005ac57600080fd5b50620005dc60048036036020811015620005c557600080fd5b810190808035906020019092919050505062002128565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200194505050505060405180910390f35b3480156200067057600080fd5b50620006c0600480360360408110156200068957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620021b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200072b57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620008245750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015620007e357600080fd5b505afa158015620007f8573d6000803e3d6000fd5b505050506040513d60208110156200080f57600080fd5b81019080805190602001909291905050501515145b151562000899576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600183815481101515620008c057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156200097f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4f776e65722043616e277420427579000000000000000000000000000000000081525060200191505060405180910390fd5b600015156001838154811015156200099357fe5b906000526020600020906004020160030160009054906101000a900460ff16151514151562000a2a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f853f657336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562000ac657600080fd5b505af115801562000adb573d6000803e3d6000fd5b505050506040513d602081101562000af257600080fd5b81019080805190602001909291905050501562000d1d57600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506002600060018481548110151562000bc057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018381548110151562000c3c57fe5b90600052602060002090600402016002015481548110151562000c5b57fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018281548110151562000c9857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062000d22565b600090505b92915050565b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154925092509250909192565b6060806060806000600180549050905060608160405190808252806020026020018201604052801562000e405781602001602082028038833980820191505090505b50905060608260405190808252806020026020018201604052801562000e755781602001602082028038833980820191505090505b50905060608360405190808252806020026020018201604052801562000eaa5781602001602082028038833980820191505090505b50905060608460405190808252806020026020018201604052801562000edf5781602001602082028038833980820191505090505b50905060008090505b600180549050811015620010af5760018181548110151562000f0657fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858281518110151562000f4757fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018181548110151562000f9357fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848281518110151562000fd457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001818154811015156200102057fe5b90600052602060002090600402016002015483828151811015156200104157fe5b90602001906020020181815250506001818154811015156200105f57fe5b906000526020600020906004020160030160009054906101000a900460ff1682828151811015156200108d57fe5b9060200190602002019015159081151581525050808060010191505062000ee8565b50838383839850985098509850505050505090919293565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200118a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200113f575b5050505050905090565b6000336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154620011e36200228e565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f0801580156200123d573d6000803e3d6000fd5b509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141515156200133557fe5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050620013d260016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546200220390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506200146e60026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200220390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506200154a6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546200220390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200160157fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620016fa5750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015620016b957600080fd5b505afa158015620016ce573d6000803e3d6000fd5b505050506040513d6020811015620016e557600080fd5b81019080805190602001909291905050501515145b15156200176f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b600015156001838154811015156200178357fe5b906000526020600020906004020160030160009054906101000a900460ff1615151415156200181a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001838154811015156200184157fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620018ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200196457600080fd5b505af115801562001979573d6000803e3d6000fd5b505050506040513d60208110156200199057600080fd5b8101908080519060200190929190505050151562001a3d57600182815481101515620019b857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062001a42565b600090505b92915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1663cc2e8cca6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160806040518083038186803b15801562001ab157600080fd5b505afa15801562001ac6573d6000803e3d6000fd5b505050506040513d608081101562001add57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505093509350935093509193509193565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141562001cbe5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060ff6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506101816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506001905062001cc3565b600090505b90565b60008273ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151562001d2c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562001de3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b600015158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562001e4a57600080fd5b505afa15801562001e5f573d6000803e3d6000fd5b505050506040513d602081101562001e7657600080fd5b8101908080519060200190929190505050151514151562001eff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f416c726561647920696e204f726465720000000000000000000000000000000081525060200191505060405180910390fd5b62001f096200229f565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281604001818152505060008160600190151590811515815250506001819080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055505050508373ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620020e257600080fd5b505af1158015620020f7573d6000803e3d6000fd5b505050506040513d60208110156200210e57600080fd5b810190808051906020019092919050505091505092915050565b6001818154811015156200213857fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b600260205281600052604060002081815481101515620021d157fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080828401905083811015151562002284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b604051610ae780620022f783390190565b608060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152509056fe608060405234801561001057600080fd5b50604051604080610ae78339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505081600060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a661011e640100000000026401000000009004565b60008001819055506100c681610193640100000000026401000000009004565b6000600101819055506100f160006001015460008001546101e1640100000000026401000000009004565b60006003018190555060008060040160006101000a81548160ff02191690831515021790555050506103f0565b6000806101466064424445010161020b640100000000026104d7179091906401000000009004565b14156101555760039050610190565b600061017c600a424445010161020b640100000000026104d7179091906401000000009004565b141561018b5760029050610190565b600190505b90565b60006101da6101be600160038502034261020b640100000000026104d7179091906401000000009004565b8361029964010000000002610565179091906401000000009004565b9050919050565b60006102038284610323640100000000026105ef179091906401000000009004565b905092915050565b6000808214151515610285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561029057fe5b06905092915050565b6000808284019050838110151515610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561033657600090506103ea565b6000828402905082848281151561034957fe5b041415156103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b6106e8806103ff6000396000f3fe60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313c23f411461009357806344c57bc6146100c25780636ff8ec3614610139578063b4f6f50914610188578063be889f4b146101b3578063cc2e8cca146101e2578063d1353c6814610226578063f853f6571461027f575b600080fd5b34801561009f57600080fd5b506100a86102e8565b604051808215151515815260200191505060405180910390f35b3480156100ce57600080fd5b506100d7610301565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019550505050505060405180910390f35b34801561014557600080fd5b506101726004803603602081101561015c57600080fd5b8101908080359060200190929190505050610352565b6040518082815260200191505060405180910390f35b34801561019457600080fd5b5061019d610386565b6040518082815260200191505060405180910390f35b3480156101bf57600080fd5b506101c86103e1565b604051808215151515815260200191505060405180910390f35b3480156101ee57600080fd5b506101f761042a565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b34801561023257600080fd5b506102696004803603604081101561024957600080fd5b810190808035906020019092919080359060200190929190505050610462565b6040518082815260200191505060405180910390f35b34801561028b57600080fd5b506102ce600480360360208110156102a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061047f565b604051808215151515815260200191505060405180910390f35b60008060040160009054906101000a900460ff16905090565b60008060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b600061037f61037060016003850203426104d790919063ffffffff16565b8361056590919063ffffffff16565b9050919050565b6000806103a1606442444501016104d790919063ffffffff16565b14156103b057600390506103de565b60006103ca600a42444501016104d790919063ffffffff16565b14156103d957600290506103de565b600190505b90565b60008060040160009054906101000a900460ff1615600060040160006101000a81548160ff021916908315150217905550600060040160009054906101000a900460ff16905090565b6000806000806000800154600060010154600060030154600060040160009054906101000a900460ff16935093509350935090919293565b600061047782846105ef90919063ffffffff16565b905092915050565b600081600060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104cd6103e1565b5060019050919050565b6000808214151515610551576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561055c57fe5b06905092915050565b60008082840190508381101515156105e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561060257600090506106b6565b6000828402905082848281151561061557fe5b041415156106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b9291505056fea165627a7a72305820c0c6cf74fa488ecb7bee11baf1b855f163d236d39ba4a1cb4c458815e3773c340029a165627a7a72305820c0828e1e1a31fcf4e2af991dbddeb2baa5cc8021a927dcff080a5f82ef0169d60029",
  "deployedBytecode": "0x608060405260043610620000d3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ac1449014620000d85780630b5d5b54146200014f578063267dbaa3146200018b57806328347b6c14620002da5780636765bc16146200034b57806392a8a78914620003655780639aa0d925146200037f5780639e96c3ad14620003f6578063a089dcde1462000478578063a5e12aef14620004f6578063a6149f091462000528578063cb5eeae7146200059f578063ce4f8d411462000663575b600080fd5b348015620000e557600080fd5b506200013560048036036040811015620000fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000702565b604051808215151515815260200191505060405180910390f35b3480156200015c57600080fd5b506200016762000d28565b60405180848152602001838152602001828152602001935050505060405180910390f35b3480156200019857600080fd5b50620001a362000dfe565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b83811015620001f4578082015181840152602081019050620001d7565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015620002385780820151818401526020810190506200021b565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156200027c5780820151818401526020810190506200025f565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015620002c0578082015181840152602081019050620002a3565b505050509050019850505050505050505060405180910390f35b348015620002e757600080fd5b50620002f2620010c7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620003375780820151818401526020810190506200031a565b505050509050019250505060405180910390f35b3480156200035857600080fd5b506200036362001194565b005b3480156200037257600080fd5b506200037d620012e6565b005b3480156200038c57600080fd5b50620003dc60048036036040811015620003a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620015d8565b604051808215151515815260200191505060405180910390f35b3480156200040357600080fd5b5062000449600480360360208110156200041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001a48565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b3480156200048557600080fd5b50620004cb600480360360208110156200049e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001b1b565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156200050357600080fd5b506200050e62001b4b565b604051808215151515815260200191505060405180910390f35b3480156200053557600080fd5b5062000585600480360360408110156200054e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001cc6565b604051808215151515815260200191505060405180910390f35b348015620005ac57600080fd5b50620005dc60048036036020811015620005c557600080fd5b810190808035906020019092919050505062002128565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200194505050505060405180910390f35b3480156200067057600080fd5b50620006c0600480360360408110156200068957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620021b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200072b57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620008245750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015620007e357600080fd5b505afa158015620007f8573d6000803e3d6000fd5b505050506040513d60208110156200080f57600080fd5b81019080805190602001909291905050501515145b151562000899576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600183815481101515620008c057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156200097f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4f776e65722043616e277420427579000000000000000000000000000000000081525060200191505060405180910390fd5b600015156001838154811015156200099357fe5b906000526020600020906004020160030160009054906101000a900460ff16151514151562000a2a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f853f657336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562000ac657600080fd5b505af115801562000adb573d6000803e3d6000fd5b505050506040513d602081101562000af257600080fd5b81019080805190602001909291905050501562000d1d57600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506002600060018481548110151562000bc057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018381548110151562000c3c57fe5b90600052602060002090600402016002015481548110151562000c5b57fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018281548110151562000c9857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062000d22565b600090505b92915050565b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154925092509250909192565b6060806060806000600180549050905060608160405190808252806020026020018201604052801562000e405781602001602082028038833980820191505090505b50905060608260405190808252806020026020018201604052801562000e755781602001602082028038833980820191505090505b50905060608360405190808252806020026020018201604052801562000eaa5781602001602082028038833980820191505090505b50905060608460405190808252806020026020018201604052801562000edf5781602001602082028038833980820191505090505b50905060008090505b600180549050811015620010af5760018181548110151562000f0657fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858281518110151562000f4757fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018181548110151562000f9357fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848281518110151562000fd457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001818154811015156200102057fe5b90600052602060002090600402016002015483828151811015156200104157fe5b90602001906020020181815250506001818154811015156200105f57fe5b906000526020600020906004020160030160009054906101000a900460ff1682828151811015156200108d57fe5b9060200190602002019015159081151581525050808060010191505062000ee8565b50838383839850985098509850505050505090919293565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200118a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200113f575b5050505050905090565b6000336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154620011e36200228e565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f0801580156200123d573d6000803e3d6000fd5b509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141515156200133557fe5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050620013d260016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546200220390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506200146e60026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200220390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506200154a6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546200220390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200160157fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620016fa5750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015620016b957600080fd5b505afa158015620016ce573d6000803e3d6000fd5b505050506040513d6020811015620016e557600080fd5b81019080805190602001909291905050501515145b15156200176f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b600015156001838154811015156200178357fe5b906000526020600020906004020160030160009054906101000a900460ff1615151415156200181a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001838154811015156200184157fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620018ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200196457600080fd5b505af115801562001979573d6000803e3d6000fd5b505050506040513d60208110156200199057600080fd5b8101908080519060200190929190505050151562001a3d57600182815481101515620019b857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062001a42565b600090505b92915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1663cc2e8cca6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160806040518083038186803b15801562001ab157600080fd5b505afa15801562001ac6573d6000803e3d6000fd5b505050506040513d608081101562001add57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505093509350935093509193509193565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141562001cbe5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060ff6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506101816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506001905062001cc3565b600090505b90565b60008273ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151562001d2c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562001de3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b600015158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562001e4a57600080fd5b505afa15801562001e5f573d6000803e3d6000fd5b505050506040513d602081101562001e7657600080fd5b8101908080519060200190929190505050151514151562001eff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f416c726561647920696e204f726465720000000000000000000000000000000081525060200191505060405180910390fd5b62001f096200229f565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281604001818152505060008160600190151590811515815250506001819080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055505050508373ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620020e257600080fd5b505af1158015620020f7573d6000803e3d6000fd5b505050506040513d60208110156200210e57600080fd5b810190808051906020019092919050505091505092915050565b6001818154811015156200213857fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b600260205281600052604060002081815481101515620021d157fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080828401905083811015151562002284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b604051610ae780620022f783390190565b608060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152509056fe608060405234801561001057600080fd5b50604051604080610ae78339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505081600060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a661011e640100000000026401000000009004565b60008001819055506100c681610193640100000000026401000000009004565b6000600101819055506100f160006001015460008001546101e1640100000000026401000000009004565b60006003018190555060008060040160006101000a81548160ff02191690831515021790555050506103f0565b6000806101466064424445010161020b640100000000026104d7179091906401000000009004565b14156101555760039050610190565b600061017c600a424445010161020b640100000000026104d7179091906401000000009004565b141561018b5760029050610190565b600190505b90565b60006101da6101be600160038502034261020b640100000000026104d7179091906401000000009004565b8361029964010000000002610565179091906401000000009004565b9050919050565b60006102038284610323640100000000026105ef179091906401000000009004565b905092915050565b6000808214151515610285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561029057fe5b06905092915050565b6000808284019050838110151515610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561033657600090506103ea565b6000828402905082848281151561034957fe5b041415156103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b6106e8806103ff6000396000f3fe60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313c23f411461009357806344c57bc6146100c25780636ff8ec3614610139578063b4f6f50914610188578063be889f4b146101b3578063cc2e8cca146101e2578063d1353c6814610226578063f853f6571461027f575b600080fd5b34801561009f57600080fd5b506100a86102e8565b604051808215151515815260200191505060405180910390f35b3480156100ce57600080fd5b506100d7610301565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019550505050505060405180910390f35b34801561014557600080fd5b506101726004803603602081101561015c57600080fd5b8101908080359060200190929190505050610352565b6040518082815260200191505060405180910390f35b34801561019457600080fd5b5061019d610386565b6040518082815260200191505060405180910390f35b3480156101bf57600080fd5b506101c86103e1565b604051808215151515815260200191505060405180910390f35b3480156101ee57600080fd5b506101f761042a565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b34801561023257600080fd5b506102696004803603604081101561024957600080fd5b810190808035906020019092919080359060200190929190505050610462565b6040518082815260200191505060405180910390f35b34801561028b57600080fd5b506102ce600480360360208110156102a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061047f565b604051808215151515815260200191505060405180910390f35b60008060040160009054906101000a900460ff16905090565b60008060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b600061037f61037060016003850203426104d790919063ffffffff16565b8361056590919063ffffffff16565b9050919050565b6000806103a1606442444501016104d790919063ffffffff16565b14156103b057600390506103de565b60006103ca600a42444501016104d790919063ffffffff16565b14156103d957600290506103de565b600190505b90565b60008060040160009054906101000a900460ff1615600060040160006101000a81548160ff021916908315150217905550600060040160009054906101000a900460ff16905090565b6000806000806000800154600060010154600060030154600060040160009054906101000a900460ff16935093509350935090919293565b600061047782846105ef90919063ffffffff16565b905092915050565b600081600060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104cd6103e1565b5060019050919050565b6000808214151515610551576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561055c57fe5b06905092915050565b60008082840190508381101515156105e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561060257600090506106b6565b6000828402905082848281151561061557fe5b041415156106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b9291505056fea165627a7a72305820c0c6cf74fa488ecb7bee11baf1b855f163d236d39ba4a1cb4c458815e3773c340029a165627a7a72305820c0828e1e1a31fcf4e2af991dbddeb2baa5cc8021a927dcff080a5f82ef0169d60029",
  "sourceMap": "92:1058:3:-;;;136:29;8:9:-1;5:2;;;30:1;27;20:12;5:2;136:29:3;92:1058;;;;;;",
  "deployedSourceMap": "92:1058:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:707:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1621:707:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1621:707:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1087:199:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1087:199:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2333:739:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2333:739:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2333:739:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2333:739:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2333:739:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2333:739:4;;;;;;;;;;;;;;;;;;;;;;;366:107:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;366:107:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;366:107:3;;;;;;;;;;;;;;;;;202:158;;8:9:-1;5:2;;;30:1;27;20:12;5:2;202:158:3;;;;;;633:449:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;633:449:2;;;;;;1073:543:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1073:543:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1073:543:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;482:166:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;482:166:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;482:166:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;260:38:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;260:38:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;260:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:323;;8:9:-1;5:2;;;30:1;27;20:12;5:2;305:323:2;;;;;;;;;;;;;;;;;;;;;;;;;;;575:493:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;575:493:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;575:493:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;400:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:32:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;400:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;438:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;438:42:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;438:42:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:707;1693:4;1754:5;1717:42;;:10;1728:14;1717:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:42;;;:82;;;;;1795:4;1763:36;;1768:5;1763:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1763:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1763:28:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1763:28:4;;;;;;;;;;;;;;;;:36;;;1717:82;1709:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1874:10;1837:47;;:10;1848:14;1837:26;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;1829:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:5;1921:44;;:10;1932:14;1921:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:44;;;1913:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:5;2003:27;;;2031:10;2003:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2003:39:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2003:39:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2003:39:4;;;;;;;;;;;;;;;;1999:323;;;2058:6;:18;2065:10;2058:18;;;;;;;;;;;;;;;2082:5;2058:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2058:30:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:6;:41;2116:10;2127:14;2116:26;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;2109:41;;;;;;;;;;;;;;;2151:10;2162:14;2151:26;;;;;;;;;;;;;;;;;;;;:44;;;2109:87;;;;;;;;;;;;;;;;;;2102:94;;;;;;;;;;;2217:10;2228:14;2217:26;;;;;;;;;;;;;;;;;;;;;2210:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2264:4;2257:11;;;;1999:323;2306:5;2299:12;;1621:707;;;;;:::o;1087:199:2:-;1132:14;1147;1162;1194:8;:20;1203:10;1194:20;;;;;;;;;;;;;;;:26;;;1221:8;:20;1230:10;1221:20;;;;;;;;;;;;;;;:26;;;1248:8;:20;1257:10;1248:20;;;;;;;;;;;;;;;:30;;;1187:92;;;;;;1087:199;;;:::o;2333:739:4:-;2381:16;2399;2416;2433:13;2458:14;2475:10;:17;;;;2458:34;;2502:26;2545:6;2531:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2531:21:4;;;;2502:50;;2562:24;2603:6;2589:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2589:21:4;;;;2562:48;;2620:35;2672:6;2658:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2658:21:4;;;;2620:59;;2689:23;2726:6;2715:18;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2715:18:4;;;;2689:44;;2747:9;2759:1;2747:13;;2743:258;2765:10;:17;;;;2761:1;:21;2743:258;;;2813:10;2824:1;2813:13;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;2798:9;2808:1;2798:12;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;2858:10;2869:1;2858:13;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;2845:7;2853:1;2845:10;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;2912:10;2923:1;2912:13;;;;;;;;;;;;;;;;;;;;:31;;;2888:18;2907:1;2888:21;;;;;;;;;;;;;;;;;:55;;;;;2968:10;2979:1;2968:13;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;2953:9;2963:1;2953:12;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;2784:3;;;;;;;2743:258;;;;3018:9;3028:7;3036:18;3055:9;3010:55;;;;;;;;;;;;;2333:739;;;;:::o;366:107:3:-;411:16;447:6;:18;454:10;447:18;;;;;;;;;;;;;;;440:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;366:107;:::o;202:158::-;237:15;272:10;283:8;:20;292:10;283:20;;;;;;;;;;;;;;;:26;;;263:47;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;263:47:3;237:74;;321:6;:18;328:10;321:18;;;;;;;;;;;;;;;345:7;321:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;321:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;202:158;:::o;633:449:2:-;710:1;682:8;:20;691:10;682:20;;;;;;;;;;;;;;;:26;;;:29;;675:37;;;;;;722:13;738:8;:20;747:10;738:20;;;;;;;;;;;;;;;:30;;;722:46;;807:33;838:1;807:8;:20;816:10;807:20;;;;;;;;;;;;;;;:26;;;:30;;:33;;;;:::i;:::-;778:8;:20;787:10;778:20;;;;;;;;;;;;;;;:26;;:62;;;;879:33;910:1;879:8;:20;888:10;879:20;;;;;;;;;;;;;;;:26;;;:30;;:33;;;;:::i;:::-;850:8;:20;859:10;850:20;;;;;;;;;;;;;;;:26;;:62;;;;955:69;990:8;:20;999:10;990:20;;;;;;;;;;;;;;;:33;;;955:8;:20;964:10;955:20;;;;;;;;;;;;;;;:30;;;:34;;:69;;;;:::i;:::-;922:8;:20;931:10;922:20;;;;;;;;;;;;;;;:30;;:102;;;;1070:5;1034:8;:20;1043:10;1034:20;;;;;;;;;;;;;;;:33;;:41;;;;633:449;:::o;1073:543:4:-;1157:4;1218:5;1181:42;;:10;1192:14;1181:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:42;;;:82;;;;;1259:4;1227:36;;1232:5;1227:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1227:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1227:28:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1227:28:4;;;;;;;;;;;;;;;;:36;;;1181:82;1173:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:5;1301:44;;:10;1312:14;1301:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:44;;;1293:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1424:10;1387:47;;:10;1398:14;1387:26;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;1379:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:5;1475:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1475:31:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1475:31:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1475:31:4;;;;;;;;;;;;;;;;1474:32;1470:139;;;1529:10;1540:14;1529:26;;;;;;;;;;;;;;;;;;;;;1522:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:4;1569:11;;;;1470:139;1604:5;1597:12;;1073:543;;;;;:::o;482:166:3:-;540:15;556;572:14;587:13;623:4;618:21;;;:23;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;618:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;618:23:3;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;618:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:30;;;;;;;;482:166;;;;;:::o;260:38:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;305:323::-;351:4;399:1;369:8;:20;378:10;369:20;;;;;;;;;;;;;;;:26;;;:31;366:238;;;440:1;411:8;:20;420:10;411:20;;;;;;;;;;;;;;;:26;;:30;;;;480:1;451:8;:20;460:10;451:20;;;;;;;;;;;;;;;:26;;:30;;;;527:3;491:8;:20;500:10;491:20;;;;;;;;;;;;;;;:33;;:39;;;;573:3;540:8;:20;549:10;540:20;;;;;;;;;;;;;;;:30;;:36;;;;593:4;586:11;;;;366:238;616:5;609:12;;305:323;;:::o;575:493:4:-;641:4;697:5;665:37;;:6;:18;672:10;665:18;;;;;;;;;;;;;;;684:8;665:28;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;657:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:5;746:37;;751:5;746:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;746:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;746:28:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;746:28:4;;;;;;;;;;;;;;;;:37;;;738:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:25;;:::i;:::-;865:5;848;:14;;:22;;;;;;;;;;;895:10;880:5;:12;;:25;;;;;;;;;;;941:8;915:5;:23;;:34;;;;;976:5;959;:14;;:22;;;;;;;;;;;991:10;1007:5;991:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;991:22:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:5;1030:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1030:31:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1030:31:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1030:31:4;;;;;;;;;;;;;;;;1023:38;;;575:493;;;;:::o;400:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;438:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;834:176:6:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;92:1058:3:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport './Fish.sol';\nimport './FishRod.sol';\nimport './Market.sol';\ncontract FrenzyFish is FishRod,Market{\n\n    constructor () public {\n    }\n    // address[] public Fishes;\n    function Fishing() public{\n        address newfish = address(new Fish(msg.sender,UsersRod[msg.sender].Level));\n        Fishes[msg.sender].push(newfish);\n    }\n     function ListAllFishes() public view returns(address[] memory) {\n         return Fishes[msg.sender];\n     }\n        function GetFishDetails(address fish) public view returns(uint256 _rarity,uint256 _weight,uint256 _price,bool _onOrder){\n        return Fish(fish).GetDetails();\n    }\n\n\n    // function RechargeUsingFish(address _Fish,uint256 _position) public{\n    //     require(FishOwner[_Fish] == msg.sender,\"User is not Fish owner\");\n    //     require(_position >= 0 && _position < Players[msg.sender].Towns.length,\"Invalid Array Index\");\n    //     require(Players[msg.sender].Towns[_position] == _Fish,\"Invalid Town Index\");\n    //     Fish(_Fish).DestroyFish();\n    //     FishOwner[_Fish] = address(0);\n    //     Players[msg.sender].Towns[_position] = address(0);\n    // }\n\n}",
  "sourcePath": "/home/denny/Projects/FishingFrenzy/truffle/contracts/FrenzyFish.sol",
  "ast": {
    "absolutePath": "/home/denny/Projects/FishingFrenzy/truffle/contracts/FrenzyFish.sol",
    "exportedSymbols": {
      "FrenzyFish": [
        560
      ]
    },
    "id": 561,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 489,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/denny/Projects/FishingFrenzy/truffle/contracts/Fish.sol",
        "file": "./Fish.sol",
        "id": 490,
        "nodeType": "ImportDirective",
        "scope": 561,
        "sourceUnit": 311,
        "src": "24:20:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/denny/Projects/FishingFrenzy/truffle/contracts/FishRod.sol",
        "file": "./FishRod.sol",
        "id": 491,
        "nodeType": "ImportDirective",
        "scope": 561,
        "sourceUnit": 488,
        "src": "45:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/denny/Projects/FishingFrenzy/truffle/contracts/Market.sol",
        "file": "./Market.sol",
        "id": 492,
        "nodeType": "ImportDirective",
        "scope": 561,
        "sourceUnit": 935,
        "src": "69:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 493,
              "name": "FishRod",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 487,
              "src": "115:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FishRod_$487",
                "typeString": "contract FishRod"
              }
            },
            "id": 494,
            "nodeType": "InheritanceSpecifier",
            "src": "115:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 495,
              "name": "Market",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 934,
              "src": "123:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Market_$934",
                "typeString": "contract Market"
              }
            },
            "id": 496,
            "nodeType": "InheritanceSpecifier",
            "src": "123:6:3"
          }
        ],
        "contractDependencies": [
          310,
          487,
          934
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 560,
        "linearizedBaseContracts": [
          560,
          934,
          487
        ],
        "name": "FrenzyFish",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 499,
              "nodeType": "Block",
              "src": "158:7:3",
              "statements": []
            },
            "documentation": null,
            "id": 500,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "148:2:3"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "158:0:3"
            },
            "scope": 560,
            "src": "136:29:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "227:133:3",
              "statements": [
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "name": "newfish",
                      "nodeType": "VariableDeclaration",
                      "scope": 526,
                      "src": "237:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 503,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "237:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 517,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 508,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1139,
                              "src": "272:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "272:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 510,
                                "name": "UsersRod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 329,
                                "src": "283:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$325_storage_$",
                                  "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                                }
                              },
                              "id": 513,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 511,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1139,
                                  "src": "292:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "292:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "283:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rod_$325_storage",
                                "typeString": "struct FishRod.Rod storage ref"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 318,
                            "src": "283:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "263:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_Fish_$310_$",
                            "typeString": "function (address,uint256) returns (contract Fish)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 506,
                            "name": "Fish",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 310,
                            "src": "267:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fish_$310",
                              "typeString": "contract Fish"
                            }
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "263:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$310",
                          "typeString": "contract Fish"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fish_$310",
                          "typeString": "contract Fish"
                        }
                      ],
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "255:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "255:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "237:74:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 523,
                        "name": "newfish",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "345:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 518,
                          "name": "Fishes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "321:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 521,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 519,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1139,
                            "src": "328:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "328:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "321:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "321:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "321:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "321:32:3"
                }
              ]
            },
            "documentation": null,
            "id": 527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Fishing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "218:2:3"
            },
            "returnParameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "227:0:3"
            },
            "scope": 560,
            "src": "202:158:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 538,
              "nodeType": "Block",
              "src": "429:44:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 533,
                      "name": "Fishes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "447:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 536,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 534,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1139,
                        "src": "454:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "454:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "447:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 532,
                  "id": 537,
                  "nodeType": "Return",
                  "src": "440:25:3"
                }
              ]
            },
            "documentation": null,
            "id": 539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ListAllFishes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "388:2:3"
            },
            "returnParameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 531,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "411:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 529,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "411:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 530,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "411:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:18:3"
            },
            "scope": 560,
            "src": "366:107:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "601:47:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 553,
                            "name": "fish",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "623:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 552,
                          "name": "Fish",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "618:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Fish_$310_$",
                            "typeString": "type(contract Fish)"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "618:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$310",
                          "typeString": "contract Fish"
                        }
                      },
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetDetails",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "618:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,bool)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "618:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,uint256,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 551,
                  "id": 557,
                  "nodeType": "Return",
                  "src": "611:30:3"
                }
              ]
            },
            "documentation": null,
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetFishDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "name": "fish",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "506:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "505:14:3"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "name": "_rarity",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "540:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 546,
                  "name": "_weight",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "556:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "572:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "name": "_onOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "587:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "539:62:3"
            },
            "scope": 560,
            "src": "482:166:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 561,
        "src": "92:1058:3"
      }
    ],
    "src": "0:1150:3"
  },
  "legacyAST": {
    "absolutePath": "/home/denny/Projects/FishingFrenzy/truffle/contracts/FrenzyFish.sol",
    "exportedSymbols": {
      "FrenzyFish": [
        560
      ]
    },
    "id": 561,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 489,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/denny/Projects/FishingFrenzy/truffle/contracts/Fish.sol",
        "file": "./Fish.sol",
        "id": 490,
        "nodeType": "ImportDirective",
        "scope": 561,
        "sourceUnit": 311,
        "src": "24:20:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/denny/Projects/FishingFrenzy/truffle/contracts/FishRod.sol",
        "file": "./FishRod.sol",
        "id": 491,
        "nodeType": "ImportDirective",
        "scope": 561,
        "sourceUnit": 488,
        "src": "45:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/denny/Projects/FishingFrenzy/truffle/contracts/Market.sol",
        "file": "./Market.sol",
        "id": 492,
        "nodeType": "ImportDirective",
        "scope": 561,
        "sourceUnit": 935,
        "src": "69:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 493,
              "name": "FishRod",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 487,
              "src": "115:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FishRod_$487",
                "typeString": "contract FishRod"
              }
            },
            "id": 494,
            "nodeType": "InheritanceSpecifier",
            "src": "115:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 495,
              "name": "Market",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 934,
              "src": "123:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Market_$934",
                "typeString": "contract Market"
              }
            },
            "id": 496,
            "nodeType": "InheritanceSpecifier",
            "src": "123:6:3"
          }
        ],
        "contractDependencies": [
          310,
          487,
          934
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 560,
        "linearizedBaseContracts": [
          560,
          934,
          487
        ],
        "name": "FrenzyFish",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 499,
              "nodeType": "Block",
              "src": "158:7:3",
              "statements": []
            },
            "documentation": null,
            "id": 500,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "148:2:3"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "158:0:3"
            },
            "scope": 560,
            "src": "136:29:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "227:133:3",
              "statements": [
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "name": "newfish",
                      "nodeType": "VariableDeclaration",
                      "scope": 526,
                      "src": "237:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 503,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "237:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 517,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 508,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1139,
                              "src": "272:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "272:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 510,
                                "name": "UsersRod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 329,
                                "src": "283:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$325_storage_$",
                                  "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                                }
                              },
                              "id": 513,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 511,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1139,
                                  "src": "292:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "292:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "283:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rod_$325_storage",
                                "typeString": "struct FishRod.Rod storage ref"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 318,
                            "src": "283:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "263:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_Fish_$310_$",
                            "typeString": "function (address,uint256) returns (contract Fish)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 506,
                            "name": "Fish",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 310,
                            "src": "267:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fish_$310",
                              "typeString": "contract Fish"
                            }
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "263:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$310",
                          "typeString": "contract Fish"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fish_$310",
                          "typeString": "contract Fish"
                        }
                      ],
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "255:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "255:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "237:74:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 523,
                        "name": "newfish",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "345:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 518,
                          "name": "Fishes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "321:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 521,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 519,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1139,
                            "src": "328:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "328:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "321:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "321:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "321:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "321:32:3"
                }
              ]
            },
            "documentation": null,
            "id": 527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Fishing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "218:2:3"
            },
            "returnParameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "227:0:3"
            },
            "scope": 560,
            "src": "202:158:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 538,
              "nodeType": "Block",
              "src": "429:44:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 533,
                      "name": "Fishes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "447:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 536,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 534,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1139,
                        "src": "454:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "454:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "447:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 532,
                  "id": 537,
                  "nodeType": "Return",
                  "src": "440:25:3"
                }
              ]
            },
            "documentation": null,
            "id": 539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ListAllFishes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "388:2:3"
            },
            "returnParameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 531,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "411:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 529,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "411:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 530,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "411:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:18:3"
            },
            "scope": 560,
            "src": "366:107:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "601:47:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 553,
                            "name": "fish",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "623:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 552,
                          "name": "Fish",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "618:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Fish_$310_$",
                            "typeString": "type(contract Fish)"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "618:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$310",
                          "typeString": "contract Fish"
                        }
                      },
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetDetails",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "618:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,bool)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "618:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,uint256,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 551,
                  "id": 557,
                  "nodeType": "Return",
                  "src": "611:30:3"
                }
              ]
            },
            "documentation": null,
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetFishDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "name": "fish",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "506:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "505:14:3"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "name": "_rarity",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "540:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 546,
                  "name": "_weight",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "556:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "572:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "name": "_onOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "587:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "539:62:3"
            },
            "scope": 560,
            "src": "482:166:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 561,
        "src": "92:1058:3"
      }
    ],
    "src": "0:1150:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xA3A1E4e9d50AB4CaBA8A74247b9eB635Cc8C4159",
      "transactionHash": "0xad460a1afd01be6a307d6edc3f58ff825f5fe5926861e0cd6112b51bc25a6af2"
    }
  },
  "schemaVersion": "3.0.13",
  "updatedAt": "2019-09-10T11:14:20.778Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}