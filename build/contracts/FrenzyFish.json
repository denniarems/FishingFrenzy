{
  "contractName": "FrenzyFish",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "GetRodDetails",
      "outputs": [
        {
          "name": "_level",
          "type": "uint256"
        },
        {
          "name": "_power",
          "type": "uint256"
        },
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "UpgradeFishRod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "UsersRod",
      "outputs": [
        {
          "name": "Level",
          "type": "uint256"
        },
        {
          "name": "Power",
          "type": "uint256"
        },
        {
          "name": "CurrentPrice",
          "type": "uint256"
        },
        {
          "name": "NextPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "FirstUserInitialRod",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Fishes",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "Fishing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ListAllFishes",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "fish",
          "type": "address"
        }
      ],
      "name": "GetFishDetails",
      "outputs": [
        {
          "name": "_rarity",
          "type": "uint256"
        },
        {
          "name": "_weight",
          "type": "uint256"
        },
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"GetRodDetails\",\"outputs\":[{\"name\":\"_level\",\"type\":\"uint256\"},{\"name\":\"_power\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ListAllFishes\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Fishing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"UpgradeFishRod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"fish\",\"type\":\"address\"}],\"name\":\"GetFishDetails\",\"outputs\":[{\"name\":\"_rarity\",\"type\":\"uint256\"},{\"name\":\"_weight\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"UsersRod\",\"outputs\":[{\"name\":\"Level\",\"type\":\"uint256\"},{\"name\":\"Power\",\"type\":\"uint256\"},{\"name\":\"CurrentPrice\",\"type\":\"uint256\"},{\"name\":\"NextPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"FirstUserInitialRod\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Fishes\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/FrenzyFish.sol\":\"FrenzyFish\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/Fish.sol\":{\"keccak256\":\"0xf81b5fcd3148a869a99c5ac23d89fc1e86d520cea7e2b665f8ece4d72fff51db\",\"urls\":[\"bzzr://60c0930178fa5646a3b80ead1c2254905b8239739084be371876ebbf500a630c\"]},\"/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/FishRod.sol\":{\"keccak256\":\"0xc786c68a9c7c52842ac8b7e98f87ecd59b7137f28339ef2c97ae933dbe9d02c5\",\"urls\":[\"bzzr://8db570df1d9cfd155455700bedd1f313061aeacf88ee8ffb36b3cec404cce3b3\"]},\"/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/FrenzyFish.sol\":{\"keccak256\":\"0xbb2dcd09b9cee85c4efa9dcee01f436dae0dae1edbd6ce21bca2a599b7d6088c\",\"urls\":[\"bzzr://c5d8e15a40ad4f361635aab3c2b4e23265d433cb90721146814a06c689824899\"]},\"/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061155f806100206000396000f3fe60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b5d5b541461009357806328347b6c146100cc5780636765bc161461013857806392a8a7891461014f5780639e96c3ad14610166578063a089dcde146101d9578063a5e12aef14610253578063ce4f8d4114610282575b600080fd5b34801561009f57600080fd5b506100a861031d565b60405180848152602001838152602001828152602001935050505060405180910390f35b3480156100d857600080fd5b506100e16103f3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610124578082015181840152602081019050610109565b505050509050019250505060405180910390f35b34801561014457600080fd5b5061014d6104be565b005b34801561015b57600080fd5b5061016461060d565b005b34801561017257600080fd5b506101b56004803603602081101561018957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108f8565b60405180848152602001838152602001828152602001935050505060405180910390f35b3480156101e557600080fd5b50610228600480360360208110156101fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109bb565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b34801561025f57600080fd5b506102686109eb565b604051808215151515815260200191505060405180910390f35b34801561028e57600080fd5b506102db600480360360408110156102a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b64565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154925092509250909192565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104b457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161046a575b5050505050905090565b6000336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461050b610c3b565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f080158015610564573d6000803e3d6000fd5b509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415151561065b57fe5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015490506106f660016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610bb190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555061079060026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154610bb190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061086a6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610bb190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1663cc2e8cca6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160606040518083038186803b15801561095f57600080fd5b505afa158015610973573d6000803e3d6000fd5b505050506040513d606081101561098957600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610b5c5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060ff6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506101816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060019050610b61565b600090505b90565b600160205281600052604060002081815481101515610b7f57fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808284019050838110151515610c31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6040516108e880610c4c8339019056fe608060405234801561001057600080fd5b506040516040806108e88339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505081600060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a6610101640100000000026401000000009004565b60008001819055506100c681610176640100000000026401000000009004565b6000600101819055506100f160006001015460008001546101c4640100000000026401000000009004565b60006003018190555050506103d3565b600080610129606442444501016101ee640100000000026102f5179091906401000000009004565b14156101385760039050610173565b600061015f600a42444501016101ee640100000000026102f5179091906401000000009004565b141561016e5760029050610173565b600190505b90565b60006101bd6101a160016003850203426101ee640100000000026102f5179091906401000000009004565b8361027c64010000000002610383179091906401000000009004565b9050919050565b60006101e682846103066401000000000261040d179091906401000000009004565b905092915050565b6000808214151515610268576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561027357fe5b06905092915050565b60008082840190508381101515156102fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561031957600090506103cd565b6000828402905082848281151561032c57fe5b041415156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b610506806103e26000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806344c57bc6146100725780636ff8ec36146100de578063b4f6f5091461012d578063cc2e8cca14610158578063d1353c6814610191575b600080fd5b34801561007e57600080fd5b506100876101ea565b604051808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390f35b3480156100ea57600080fd5b506101176004803603602081101561010157600080fd5b8101908080359060200190929190505050610228565b6040518082815260200191505060405180910390f35b34801561013957600080fd5b5061014261025c565b6040518082815260200191505060405180910390f35b34801561016457600080fd5b5061016d6102b7565b60405180848152602001838152602001828152602001935050505060405180910390f35b34801561019d57600080fd5b506101d4600480360360408110156101b457600080fd5b8101908080359060200190929190803590602001909291905050506102d8565b6040518082815260200191505060405180910390f35b60008060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b600061025561024660016003850203426102f590919063ffffffff16565b8361038390919063ffffffff16565b9050919050565b600080610277606442444501016102f590919063ffffffff16565b141561028657600390506102b4565b60006102a0600a42444501016102f590919063ffffffff16565b14156102af57600290506102b4565b600190505b90565b60008060008060000154600060010154600060030154925092509250909192565b60006102ed828461040d90919063ffffffff16565b905092915050565b600080821415151561036f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561037a57fe5b06905092915050565b6000808284019050838110151515610403576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561042057600090506104d4565b6000828402905082848281151561043357fe5b041415156104cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b9291505056fea165627a7a72305820ba402df0227c4c0fdb7b26acfdd4e500ded7e692e16f0badee2eb476b33614150029a165627a7a7230582080168383a2a3765b8bd466d60cf9963dd66daacb7191d658d16d57eccae549370029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b5d5b541461009357806328347b6c146100cc5780636765bc161461013857806392a8a7891461014f5780639e96c3ad14610166578063a089dcde146101d9578063a5e12aef14610253578063ce4f8d4114610282575b600080fd5b34801561009f57600080fd5b506100a861031d565b60405180848152602001838152602001828152602001935050505060405180910390f35b3480156100d857600080fd5b506100e16103f3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610124578082015181840152602081019050610109565b505050509050019250505060405180910390f35b34801561014457600080fd5b5061014d6104be565b005b34801561015b57600080fd5b5061016461060d565b005b34801561017257600080fd5b506101b56004803603602081101561018957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108f8565b60405180848152602001838152602001828152602001935050505060405180910390f35b3480156101e557600080fd5b50610228600480360360208110156101fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109bb565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b34801561025f57600080fd5b506102686109eb565b604051808215151515815260200191505060405180910390f35b34801561028e57600080fd5b506102db600480360360408110156102a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b64565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154925092509250909192565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104b457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161046a575b5050505050905090565b6000336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461050b610c3b565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f080158015610564573d6000803e3d6000fd5b509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415151561065b57fe5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015490506106f660016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610bb190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555061079060026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154610bb190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061086a6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610bb190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1663cc2e8cca6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160606040518083038186803b15801561095f57600080fd5b505afa158015610973573d6000803e3d6000fd5b505050506040513d606081101561098957600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610b5c5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060ff6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506101816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060019050610b61565b600090505b90565b600160205281600052604060002081815481101515610b7f57fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808284019050838110151515610c31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6040516108e880610c4c8339019056fe608060405234801561001057600080fd5b506040516040806108e88339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505081600060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a6610101640100000000026401000000009004565b60008001819055506100c681610176640100000000026401000000009004565b6000600101819055506100f160006001015460008001546101c4640100000000026401000000009004565b60006003018190555050506103d3565b600080610129606442444501016101ee640100000000026102f5179091906401000000009004565b14156101385760039050610173565b600061015f600a42444501016101ee640100000000026102f5179091906401000000009004565b141561016e5760029050610173565b600190505b90565b60006101bd6101a160016003850203426101ee640100000000026102f5179091906401000000009004565b8361027c64010000000002610383179091906401000000009004565b9050919050565b60006101e682846103066401000000000261040d179091906401000000009004565b905092915050565b6000808214151515610268576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561027357fe5b06905092915050565b60008082840190508381101515156102fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561031957600090506103cd565b6000828402905082848281151561032c57fe5b041415156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b610506806103e26000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806344c57bc6146100725780636ff8ec36146100de578063b4f6f5091461012d578063cc2e8cca14610158578063d1353c6814610191575b600080fd5b34801561007e57600080fd5b506100876101ea565b604051808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390f35b3480156100ea57600080fd5b506101176004803603602081101561010157600080fd5b8101908080359060200190929190505050610228565b6040518082815260200191505060405180910390f35b34801561013957600080fd5b5061014261025c565b6040518082815260200191505060405180910390f35b34801561016457600080fd5b5061016d6102b7565b60405180848152602001838152602001828152602001935050505060405180910390f35b34801561019d57600080fd5b506101d4600480360360408110156101b457600080fd5b8101908080359060200190929190803590602001909291905050506102d8565b6040518082815260200191505060405180910390f35b60008060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b600061025561024660016003850203426102f590919063ffffffff16565b8361038390919063ffffffff16565b9050919050565b600080610277606442444501016102f590919063ffffffff16565b141561028657600390506102b4565b60006102a0600a42444501016102f590919063ffffffff16565b14156102af57600290506102b4565b600190505b90565b60008060008060000154600060010154600060030154925092509250909192565b60006102ed828461040d90919063ffffffff16565b905092915050565b600080821415151561036f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561037a57fe5b06905092915050565b6000808284019050838110151515610403576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561042057600090506104d4565b6000828402905082848281151561043357fe5b041415156104cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b9291505056fea165627a7a72305820ba402df0227c4c0fdb7b26acfdd4e500ded7e692e16f0badee2eb476b33614150029a165627a7a7230582080168383a2a3765b8bd466d60cf9963dd66daacb7191d658d16d57eccae549370029",
  "sourceMap": "69:1085:2:-;;;106:29;8:9:-1;5:2;;;30:1;27;20:12;5:2;106:29:2;69:1085;;;;;;",
  "deployedSourceMap": "69:1085:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1087:199:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1087:199:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:107:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;384:107:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;384:107:2;;;;;;;;;;;;;;;;;220:158;;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:158:2;;;;;;633:449:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;633:449:1;;;;;;500:152:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;500:152:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;500:152:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;260:38:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;260:38:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;260:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:323;;8:9:-1;5:2;;;30:1;27;20:12;5:2;305:323:1;;;;;;;;;;;;;;;;;;;;;;;;;;;172:42:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;172:42:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;172:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1087:199:1;1132:14;1147;1162;1194:8;:20;1203:10;1194:20;;;;;;;;;;;;;;;:26;;;1221:8;:20;1230:10;1221:20;;;;;;;;;;;;;;;:26;;;1248:8;:20;1257:10;1248:20;;;;;;;;;;;;;;;:30;;;1187:92;;;;;;1087:199;;;:::o;384:107:2:-;429:16;465:6;:18;472:10;465:18;;;;;;;;;;;;;;;458:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:107;:::o;220:158::-;255:15;290:10;301:8;:20;310:10;301:20;;;;;;;;;;;;;;;:26;;;281:47;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;281:47:2;255:74;;339:6;:18;346:10;339:18;;;;;;;;;;;;;;;363:7;339:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;339:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;220:158;:::o;633:449:1:-;710:1;682:8;:20;691:10;682:20;;;;;;;;;;;;;;;:26;;;:29;;675:37;;;;;;722:13;738:8;:20;747:10;738:20;;;;;;;;;;;;;;;:30;;;722:46;;807:33;838:1;807:8;:20;816:10;807:20;;;;;;;;;;;;;;;:26;;;:30;;:33;;;;:::i;:::-;778:8;:20;787:10;778:20;;;;;;;;;;;;;;;:26;;:62;;;;879:33;910:1;879:8;:20;888:10;879:20;;;;;;;;;;;;;;;:26;;;:30;;:33;;;;:::i;:::-;850:8;:20;859:10;850:20;;;;;;;;;;;;;;;:26;;:62;;;;955:69;990:8;:20;999:10;990:20;;;;;;;;;;;;;;;:33;;;955:8;:20;964:10;955:20;;;;;;;;;;;;;;;:30;;;:34;;:69;;;;:::i;:::-;922:8;:20;931:10;922:20;;;;;;;;;;;;;;;:30;;:102;;;;1070:5;1034:8;:20;1043:10;1034:20;;;;;;;;;;;;;;;:33;;:41;;;;633:449;:::o;500:152:2:-;558:15;574;590:14;627:4;622:21;;;:23;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;622:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;622:23:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;622:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:30;;;;;;500:152;;;;;:::o;260:38:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;305:323::-;351:4;399:1;369:8;:20;378:10;369:20;;;;;;;;;;;;;;;:26;;;:31;366:238;;;440:1;411:8;:20;420:10;411:20;;;;;;;;;;;;;;;:26;;:30;;;;480:1;451:8;:20;460:10;451:20;;;;;;;;;;;;;;;:26;;:30;;;;527:3;491:8;:20;500:10;491:20;;;;;;;;;;;;;;;:33;;:39;;;;573:3;540:8;:20;549:10;540:20;;;;;;;;;;;;;;;:30;;:36;;;;593:4;586:11;;;;366:238;616:5;609:12;;305:323;;:::o;172:42:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;834:176:4:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;69:1085:2:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport './Fish.sol';\nimport './FishRod.sol';\ncontract FrenzyFish is FishRod{\n\n    constructor () public {\n    }\n    // address[] public Fishes;\n    mapping (address=>address[]) public Fishes;\n    function Fishing() public{\n        address newfish = address(new Fish(msg.sender,UsersRod[msg.sender].Level));\n        Fishes[msg.sender].push(newfish);\n    }\n     function ListAllFishes() public view returns(address[] memory) {\n         return Fishes[msg.sender];\n     }\n        function GetFishDetails(address fish) public view returns(uint256 _rarity,uint256 _weight,uint256 _price){\n        return Fish(fish).GetDetails();\n    }\n\n\n    // function RechargeUsingFish(address _Fish,uint256 _position) public{\n    //     require(FishOwner[_Fish] == msg.sender,\"User is not Fish owner\");\n    //     require(_position >= 0 && _position < Players[msg.sender].Towns.length,\"Invalid Array Index\");\n    //     require(Players[msg.sender].Towns[_position] == _Fish,\"Invalid Town Index\");\n    //     Fish(_Fish).DestroyFish();\n    //     FishOwner[_Fish] = address(0);\n    //     Players[msg.sender].Towns[_position] = address(0);\n    // }\n\n}",
  "sourcePath": "/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/FrenzyFish.sol",
  "ast": {
    "absolutePath": "/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/FrenzyFish.sol",
    "exportedSymbols": {
      "FrenzyFish": [
        404
      ]
    },
    "id": 405,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 333,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/Fish.sol",
        "file": "./Fish.sol",
        "id": 334,
        "nodeType": "ImportDirective",
        "scope": 405,
        "sourceUnit": 155,
        "src": "24:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/FishRod.sol",
        "file": "./FishRod.sol",
        "id": 335,
        "nodeType": "ImportDirective",
        "scope": 405,
        "sourceUnit": 332,
        "src": "45:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 336,
              "name": "FishRod",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 331,
              "src": "92:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FishRod_$331",
                "typeString": "contract FishRod"
              }
            },
            "id": 337,
            "nodeType": "InheritanceSpecifier",
            "src": "92:7:2"
          }
        ],
        "contractDependencies": [
          154,
          331
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 404,
        "linearizedBaseContracts": [
          404,
          331
        ],
        "name": "FrenzyFish",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "128:7:2",
              "statements": []
            },
            "documentation": null,
            "id": 341,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "118:2:2"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "128:0:2"
            },
            "scope": 404,
            "src": "106:29:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 346,
            "name": "Fishes",
            "nodeType": "VariableDeclaration",
            "scope": 404,
            "src": "172:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 345,
              "keyType": {
                "id": 342,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "181:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "172:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 343,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "190:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 344,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "190:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "245:133:2",
              "statements": [
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "name": "newfish",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "255:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "255:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 363,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 354,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "290:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "290:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 356,
                                "name": "UsersRod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 173,
                                "src": "301:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$169_storage_$",
                                  "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                                }
                              },
                              "id": 359,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 357,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 609,
                                  "src": "310:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "310:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "301:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rod_$169_storage",
                                "typeString": "struct FishRod.Rod storage ref"
                              }
                            },
                            "id": 360,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 162,
                            "src": "301:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "281:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_Fish_$154_$",
                            "typeString": "function (address,uint256) returns (contract Fish)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 352,
                            "name": "Fish",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 154,
                            "src": "285:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fish_$154",
                              "typeString": "contract Fish"
                            }
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "281:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$154",
                          "typeString": "contract Fish"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fish_$154",
                          "typeString": "contract Fish"
                        }
                      ],
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "273:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "255:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "newfish",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "363:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 364,
                          "name": "Fishes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "339:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 367,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 365,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "346:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "346:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "339:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "339:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "339:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "339:32:2"
                }
              ]
            },
            "documentation": null,
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Fishing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:2:2"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:2"
            },
            "scope": 404,
            "src": "220:158:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "447:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "Fishes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "465:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 382,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "472:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "472:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "465:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 378,
                  "id": 383,
                  "nodeType": "Return",
                  "src": "458:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ListAllFishes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:2"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "429:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 375,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "429:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 376,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "429:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "428:18:2"
            },
            "scope": 404,
            "src": "384:107:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "605:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 397,
                            "name": "fish",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "627:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 396,
                          "name": "Fish",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "622:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Fish_$154_$",
                            "typeString": "type(contract Fish)"
                          }
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "622:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$154",
                          "typeString": "contract Fish"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetDetails",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153,
                      "src": "622:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 395,
                  "id": 401,
                  "nodeType": "Return",
                  "src": "615:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetFishDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "name": "fish",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "524:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "523:14:2"
            },
            "returnParameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "name": "_rarity",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "558:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "name": "_weight",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "574:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "590:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "557:48:2"
            },
            "scope": 404,
            "src": "500:152:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 405,
        "src": "69:1085:2"
      }
    ],
    "src": "0:1154:2"
  },
  "legacyAST": {
    "absolutePath": "/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/FrenzyFish.sol",
    "exportedSymbols": {
      "FrenzyFish": [
        404
      ]
    },
    "id": 405,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 333,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/Fish.sol",
        "file": "./Fish.sol",
        "id": 334,
        "nodeType": "ImportDirective",
        "scope": 405,
        "sourceUnit": 155,
        "src": "24:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/denny/87a0f30e-8ebe-4956-9700-01398012e506/home/denny/Desktop/CED/Project/FishingFrenzy/contracts/FishRod.sol",
        "file": "./FishRod.sol",
        "id": 335,
        "nodeType": "ImportDirective",
        "scope": 405,
        "sourceUnit": 332,
        "src": "45:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 336,
              "name": "FishRod",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 331,
              "src": "92:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FishRod_$331",
                "typeString": "contract FishRod"
              }
            },
            "id": 337,
            "nodeType": "InheritanceSpecifier",
            "src": "92:7:2"
          }
        ],
        "contractDependencies": [
          154,
          331
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 404,
        "linearizedBaseContracts": [
          404,
          331
        ],
        "name": "FrenzyFish",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "128:7:2",
              "statements": []
            },
            "documentation": null,
            "id": 341,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "118:2:2"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "128:0:2"
            },
            "scope": 404,
            "src": "106:29:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 346,
            "name": "Fishes",
            "nodeType": "VariableDeclaration",
            "scope": 404,
            "src": "172:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 345,
              "keyType": {
                "id": 342,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "181:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "172:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 343,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "190:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 344,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "190:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "245:133:2",
              "statements": [
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "name": "newfish",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "255:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "255:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 363,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 354,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "290:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "290:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 356,
                                "name": "UsersRod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 173,
                                "src": "301:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$169_storage_$",
                                  "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                                }
                              },
                              "id": 359,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 357,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 609,
                                  "src": "310:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "310:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "301:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rod_$169_storage",
                                "typeString": "struct FishRod.Rod storage ref"
                              }
                            },
                            "id": 360,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 162,
                            "src": "301:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "281:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_Fish_$154_$",
                            "typeString": "function (address,uint256) returns (contract Fish)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 352,
                            "name": "Fish",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 154,
                            "src": "285:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fish_$154",
                              "typeString": "contract Fish"
                            }
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "281:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$154",
                          "typeString": "contract Fish"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fish_$154",
                          "typeString": "contract Fish"
                        }
                      ],
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "273:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "255:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "newfish",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "363:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 364,
                          "name": "Fishes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "339:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 367,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 365,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "346:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "346:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "339:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "339:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "339:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "339:32:2"
                }
              ]
            },
            "documentation": null,
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Fishing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:2:2"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:2"
            },
            "scope": 404,
            "src": "220:158:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "447:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "Fishes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "465:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 382,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "472:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "472:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "465:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 378,
                  "id": 383,
                  "nodeType": "Return",
                  "src": "458:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ListAllFishes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:2"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "429:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 375,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "429:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 376,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "429:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "428:18:2"
            },
            "scope": 404,
            "src": "384:107:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "605:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 397,
                            "name": "fish",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "627:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 396,
                          "name": "Fish",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "622:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Fish_$154_$",
                            "typeString": "type(contract Fish)"
                          }
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "622:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$154",
                          "typeString": "contract Fish"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetDetails",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153,
                      "src": "622:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 395,
                  "id": 401,
                  "nodeType": "Return",
                  "src": "615:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetFishDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "name": "fish",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "524:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "523:14:2"
            },
            "returnParameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "name": "_rarity",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "558:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "name": "_weight",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "574:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "590:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "557:48:2"
            },
            "scope": 404,
            "src": "500:152:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 405,
        "src": "69:1085:2"
      }
    ],
    "src": "0:1154:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x8f56EA8269C84C704A9C1e3900A379390906eB9E",
      "transactionHash": "0xa6413784918aca67440f92f8928c7dbf7b6a667e1c22581b183bbaab93877c30"
    }
  },
  "schemaVersion": "3.0.13",
  "updatedAt": "2019-08-23T16:55:33.927Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}